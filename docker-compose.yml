version: '3.8'

services:
  traefik:
    image: traefik:latest
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.http.routers.traefik.rule=Host(`traefik.example.com`)"
      - "traefik.http.routers.traefik.entrypoints=web"

  sonarqube:
    image: sonarqube:community
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonarqube-db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: /run/secrets/db_password
      SONAR_WEB_CONTEXT: /sonarqube
    ports:
      - "127.0.0.1:9000:9000"
    depends_on:
      - sonarqube-db
    secrets:
      - db_password
    labels:
      - "traefik.http.routers.sonarqube.rule=Host(`${DOMAIN}`) && PathPrefix(`/sonarqube`)"
      - "traefik.http.routers.sonarqube.entrypoints=web"
      - "traefik.http.services.sonarqube.loadbalancer.server.port=9000"

  sonarqube-db:
    image: postgres:latest
    container_name: postgresql
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
      POSTGRES_DB: sonar
    volumes:
      - postgresql:/var/lib/postgresql/data
    secrets:
      - db_password



      
  jaeger:
    image: jaegertracing/all-in-one:latest
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    ports:
      - "9411:9411"
      - "16686:16686"
      - "6831:6831/udp"
    labels:
      - "traefik.http.routers.jaeger.rule=Host(`jaeger.example.com`)"
      - "traefik.http.routers.jaeger.entrypoints=web"

volumes:
  sonarqube-db-data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
secrets:
  db_password:
    file: /tmp/db_password.txt
