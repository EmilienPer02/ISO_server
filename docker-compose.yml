version: '3.3'
services:
  traefik:
    image: traefik:v2.4
    command:
      - --log.level=INFO  # Niveau de journalisation (DEBUG, INFO, WARN, ERROR, FATAL, PANIC)
      - --accesslog=true  # Activer les journaux d'accès
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --tracing=true  # Activer la traçabilité
      - --entryPoints.web.http.middlewares=my-tracing  # Middleware de traçabilité personnalisé
     ports:
      - "80:80"
      - "8080:8080"
     volumes:
       - /var/run/docker.sock:/var/run/docker.sock
    container_name: reverse_proxy  
  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: /run/secrets/db_password
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9000:9000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarqube.rule=PathPrefix(`/sonarqube`)"
      - "traefik.http.routers.sonarqube.entrypoints=web"
      - "traefik.http.services.sonarqube.loadbalancer.server.port=9000"
  db:
    image: postgres:13
    container_name: postgresql
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
      POSTGRES_DB: sonar
    volumes:
      - postgresql:/var/lib/postgresql/data
    secrets:
      - db_password
volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
secrets:
  db_password:
    file: /tmp/db_password.txt
