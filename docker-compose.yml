version: '3.8'

services:
  traefik:
    image: traefik:latest
    command:
      - --api.insecure=false
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.example.com`)" # Remplacez par votre domaine
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.routers.traefik.service=api@internal"
      
  sonarqube:
      image: sonarqube
      restart: unless-stopped
      environment:
        - SONARQUBE_JDBC_USERNAME=sonarqube
        - SONARQUBE_JDBC_PASSWORD=/run/secrets/db_password
        - SONARQUBE_JDBC_URL=jdbc:postgresql://db:5432/sonarqube
        - SONAR_WEB_CONTEXT=/sonarqube
        - SONAR_SEARCH_DISABLED=false
        - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
      ports:
        - "127.0.0.1:9000:9000"
        - "127.0.0.1:9092:9092"
      secrets:
         - db_password
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.sonarqube.rule=PathPrefix(`/sonarqube`)"
        - "traefik.http.routers.sonarqube.entrypoints=web"
        # - "traefik.http.services.sonarqube.loadbalancer.server.port=9000"
  db:
      image: postgres
      restart: unless-stopped
      environment:
        - POSTGRES_USER=sonarqube
        - POSTGRES_PASSWORD=/run/secrets/db_password
        - POSTGRES_DB=sonarqube
     # volumes:
     #   - sonarqube_db:/var/lib/postgresql
     #   - postgresql_data:/var/lib/postgresql/data
      secrets:
       - db_password

volumes:
  sonarqube-db-data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
secrets:
  db_password:
    file: /tmp/db_password.txt
